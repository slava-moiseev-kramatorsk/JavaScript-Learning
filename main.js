//1
// let str = "Иванов";
// function upFirst() {
// str = str.toLowerCase();
// return str;
// }
// upFirst(str);
// console.log(str);


// Напишите функцию truncate(str, maxlength), которая проверяет длину строки str,
//     и если она превосходит maxlength – заменяет конец str на "...",
//     так чтобы ее длина стала равна maxlength

// Напишите функцию getShortName(fullName), которая преобразует полное ФИО fullName в краткое.
//     Например getShortName("Иванов Сергей Петрович"), функция должна вернуть "Иванов С.П."
//3
//  let str = "Иванов Сергей Петрович";
// let arr = str.split(" ");
// console.log(arr);
// function getShortName() {
// arr[0] = arr[0];
// arr[1] = arr[1].slice(0,1);
// arr[2] = arr[2].slice(0,1);
// return arr;
// }
// getShortName(arr);
// let str1 = arr.join(" ");
// alert(str1);

// Напишите функцию, которая принимает массив объектов. Функция должна вернуть
// массив только с теми объектами, у которых есть свойство name
//4
let arr = [
    {
        name : "Pasha",
        age : 27
    },
    {   name : "Sasha",
        age : 14
    },
    {
        age : 30,
        height : 180
    }
];
let arr1 = arr.filter(function (item){
    return item.name;
});

console.log(arr1);

// Напишите функцию, которая принимает два массива. Функция должна вернуть результат
// объединения этих массивов без дубликатов


// Напишите функцию, которая преобразует строки snake_case в camelCase.
//     Например modifyString('super-user-name') // вернуть 'superUserName'

// Напишите функцию, которая принимает значение с математическим выражением и возвращает результат его решения.
//     Например: calc('5 + 10') // вернет 15

// Напишите функцию, которая принимает объект с пользователями и возвращает массив имён.
//     const users = [
//     {
//         id: 1,
//         name: 'John',
//         age: 20
//     },
//     {
//         id: 2,
//         name: 'Marry',
//         age: 22
//     },
//     {
//         id: 3,
//         name: 'Poll',
//         age: 25
//     },
// ]
//
// Функция должна вернуть ['John', 'Marry', 'Poll']

// Напишите функцию, которая принимает массив. Каждый элемент массива,
//     который является числом - умножить на 2, строки - преобразовать в массив,
//     где каждый символ - отдельный элемент массива. Функция должна вернуть измененный объект

// Напишите функцию, которая проверяет строку на спам. Функция должна возвращать true,
//     если в строке есть 2 одинаковых слова, и false - если все слова уникальны.

// Напишите функцию, которая проверяет строку на нецензурную лексику. Создайте массив,
//     который будет содержать слова, которые нельзя пропускать. Функция должна принимать строку и
// проверять наличие в ней слов из массива, которые нужно пропускать.
//     Если в строке есть слово из массива - вернуть true, если нет - false.

// Напишите функцию, которая принимает массив. Функция должна вернуть предложение только из строковых значений массива. Например:
// arrayToSentence(['Привет', 1, null, 'как', '{}', 'дела']) // вернуть Привет как дела

// Напишите функцию, которая принимает массив из 10 целых чисел (от 0 до 9), который возвращает строку этих чисел в форме номера телефона.
// createPhoneNumber([1, 2, 3, 4, 5, 6, 7, 8, 9, 0]) // => returns "(123) 456-7890"
//
// function createPhoneNumber(numbers){
//     let format = '(xxx) xxx-xxxx';
//
//     for (number of numbers) {
//         format = format.replace('x', number);
//     }
//
//     return format;
// }

// Напишите функцию, которая массив с пользователями и возвращает имя пользователя с наибольшей заработной платой. Например:
// const users = [
//     {
//         id: 1,
//         name: 'John',
//         age: 20,
//         salary: 1000
//     },
//     {
//         id: 2,
//         name: 'Marry',
//         age: 22,
//         salary: 1500
//     },
//     {
//         id: 3,
//         name: 'Poll',
//         age: 25,
//         salary: 1200
//     },
// ]
//
// getHighestSalarty(users) // должно вернуть 'Marry'

// Напишите функцию, которая проверяет корректность строки. Строка должна быть не менее 3х символов
// и не более 16ти символов, должна быть не пустая, не должна содержать числа.

// Напишите функцию, которая проверяет пароль на корректность. Пароль должен быть не менее 6ти символов,
//     должен содержать хотя бы одну цифру и хотя бы одну заглавную букву